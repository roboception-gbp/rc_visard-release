#!/usr/bin/env python
PACKAGE = "rc_visard_driver"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("camera_fps",           double_t, 1,       "Frames per second in Hertz", 10, 1, 25)
gen.add("camera_exp_auto",      bool_t,   2,       "Switching between auto and manual exposure", True)
gen.add("camera_exp_value",     double_t, 4,       "Manual exposure time in seconds if exp_auto is false", 0.005, 0.000066, 0.018)
gen.add("camera_gain_value",    double_t, 8192,    "Manual gain value in decibel if exp_auto is false", 0, 0, 18)
gen.add("camera_exp_max",       double_t, 8,       "Maximum exposure time in seconds if exp_auto is true", 0.007, 0.000066, 0.018)
gen.add("camera_wb_auto",       bool_t,   16384,   "Switching white balance on and off (only for color camera)", True)
gen.add("camera_wb_ratio_red",  double_t, 32768,   "Red to green balance ratio if wb_auto is false (only for color camera)", 1.2, 0.125, 8)
gen.add("camera_wb_ratio_blue", double_t, 65536,   "Blue to green balance ratio if wb_auto is false (only for color camera)", 2.4, 0.125, 8)
gen.add("depth_acquisition_mode", str_t,  1048576, "S(ingleFrame) or C(ontinuous)", "Continuous")
gen.add("depth_quality",        str_t,    16,      "F(ull), H(igh), M(edium), or L(ow). Full requires 'stereo_plus' license.", "H")
gen.add("depth_static_scene",   bool_t,   2097152, "Accumulation of images in static scenes to reduce noise", False)
gen.add("depth_disprange",      int_t,    32,      "Disparity range in pixels", 256, 32, 512)
gen.add("depth_seg",            int_t,    64,      "Minimum size of valid disparity segments in pixels", 200, 0, 4000)
gen.add("depth_smooth",         bool_t,   4194304, "Smoothing of disparity image (requires 'stereo_plus' license)", False)
gen.add("depth_median",         int_t,    128,     "Window size for median filtering in pixels", 1, 1, 5)
gen.add("depth_fill",           int_t,    256,     "Filling level in pixels", 3, 0, 4)
gen.add("depth_minconf",        double_t, 512,     "Minimum confidence", 0.5, 0.5, 1)
gen.add("depth_mindepth",       double_t, 1024,    "Minimum depth in meters", 0.1, 0.1, 100)
gen.add("depth_maxdepth",       double_t, 2048,    "Maximum depth in meters", 100, 0.1, 100)
gen.add("depth_maxdeptherr",    double_t, 4096,    "Maximum depth error in meters", 100, 0.01, 100)
gen.add("ptp_enabled",          bool_t,   131072,  "Enable PTP slave (PrecisionTimeProtocol, IEEE1588)", False)
gen.add("out1_mode",            str_t,    262144,  "Low, High, ExposureActive, ExposureAlternateActive", "ExposureActive")
gen.add("out2_mode",            str_t,    524288,  "Low, High, ExposureActive, ExposureAlternateActive", "Low")

exit(gen.generate(PACKAGE, "rc_visard_driver", "rc_visard_driver"))
